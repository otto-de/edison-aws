/**
 * For an example
 * @see https://raw.githubusercontent.com/ben-manes/caffeine/master/gradle/dependencies.gradle
 */
ext {
    versions = [
            hibernate_validator: '6.2.0.Final',
            java_validation_api: '2.0.1.Final',
            edison             : '3.0.0-M2',
            spring_boot        : '3.0.2',
            aws_sdk            : '2.20.7',
            slf4j              : '1.7.26',
            micrometer         : '1.9.1',
            guava              : '30.0-jre',
            apache_commons     : '3.4',
            togglz             : '4.0.0-M1',
            jackson            : '2.14.2'
    ]
    test_versions = [
            junit    : '5.9.2',
            hamcrest : '2.2',
            mockito  : '3.9.0'
    ]
    plugin_versions = [
            //versions     : '0.17.0',
            //jacoco       : '0.7.9',
            //nexus_staging: '0.11.0'
            versions     : '0.25.0',
            jacoco       : '0.8.8',
            nexus_staging: '0.30.0'
    ]
    libraries = [
            hibernate_validator      : "org.hibernate:hibernate-validator:${versions.hibernate_validator}",
            java_validation_api      : "javax.validation:validation-api:${versions.java_validation_api}",
            aws_sdk_auth             : "software.amazon.awssdk:auth:${versions.aws_sdk}",
            aws_sdk_core             : "software.amazon.awssdk:core:${versions.aws_sdk}",
            aws_sdk_cloudwatch       : "software.amazon.awssdk:cloudwatch:${versions.aws_sdk}",
            aws_sdk_s3               : "software.amazon.awssdk:s3:${versions.aws_sdk}",
            aws_sdk_dynamo           : "software.amazon.awssdk:dynamodb:${versions.aws_sdk}",
            aws_sdk_ssm              : "software.amazon.awssdk:ssm:${versions.aws_sdk}",
            //edison_core              : "de.otto.edison:edison-core:${versions.edison}",
            edison_togglz            : "de.otto.edison:edison-togglz:${versions.edison}",
            edison_jobs              : "de.otto.edison:edison-jobs:${versions.edison}",
            spring_boot              : "org.springframework.boot:spring-boot:${versions.spring_boot}",
            spring_boot_autoconfigure: "org.springframework.boot:spring-boot-autoconfigure:${versions.spring_boot}",
            spring_boot_starter_actuator: "org.springframework.boot:spring-boot-starter-actuator:${versions.spring_boot}",
            spring_boot_devtools     : "org.springframework.boot:spring-boot-devtools:${versions.spring_boot}",
            slf4j                    : "org.slf4j:slf4j-api:${versions.slf4j}",
            micrometer               : "io.micrometer:micrometer-core:${versions.micrometer}",
            micrometer_cloudwatch    : "io.micrometer:micrometer-registry-cloudwatch2:${versions.micrometer}",
            guava                    : "com.google.guava:guava:${versions.guava}",
            apache_commons           : "org.apache.commons:commons-lang3:${versions.apache_commons}",
            jackson                            : "com.fasterxml.jackson.core:jackson-core:${versions.jackson}",
            jackson_databind                   : "com.fasterxml.jackson.core:jackson-databind:${versions.jackson}",
            jackson_annotations                : "com.fasterxml.jackson.core:jackson-annotations:${versions.jackson}"

    ]
    test_libraries = [
            spring_boot_starter_test: "org.springframework.boot:spring-boot-starter-test:${versions.spring_boot}",
            mockito_core            : "org.mockito:mockito-core:${test_versions.mockito}",
            hamcrest_core           : "org.hamcrest:hamcrest-core:${test_versions.hamcrest}",
            hamcrest_library        : "org.hamcrest:hamcrest-library:${test_versions.hamcrest}",
            junit                   : "junit:junit:${test_versions.junit}",
            //junit_jupiter                   : "org.junit.jupiter:junit-jupiter-api:${test_versions.junit}",
            junit_params            : "org.junit.jupiter:junit-jupiter-params:${test_versions.junit}",
            junit_engine            : "org.junit.jupiter:junit-jupiter-engine:${test_versions.junit}",
            dynamodb_local          : "com.amazonaws:DynamoDBLocal:[1.11,2.0)",
            togglz_testing          : "org.togglz:togglz-testing:${versions.togglz}",
    ]
    gradle_plugins = [
            versions     : "com.github.ben-manes:gradle-versions-plugin:${plugin_versions.versions}",
            spring_boot  : "org.springframework.boot:spring-boot-gradle-plugin:${versions.spring_boot}",
            nexus_staging: "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:${plugin_versions.nexus_staging}"
    ]

    without_log4j = { exclude group: 'org.slf4j', module: 'slf4j-log4j12' }
}
